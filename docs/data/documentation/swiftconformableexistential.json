{"identifier":{"url":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"topicSections":[{"identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Essentials","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DetailedDesign"],"title":"Articles"},{"title":"Existential conformance macros","identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DecodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EncodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/CodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableDecodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableEncodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableCodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableDecodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableEncodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableCodableExistential(accessModifier:)"]},{"title":"Coding support","identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/ProtocolMetatypeRepresentable","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/OptionalExistentialEncodingConfig","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaDecoding","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaEncoding","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaCoding"]},{"title":"Extended Modules","identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Swift"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftconformableexistential"]}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Until Swift gains support for "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0335-existential-any.md#extending-existential-types"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"they cannot satisfy generic constraints on their own."}]},{"syntax":"swift","code":["protocol Drinkable: Hashable {}","","\/\/ Is ill-formed, because `any Drinkable` does not conform to `Hashable`,","\/\/ despite the fact that every `Drinkable` instance does.","struct Foo: Hashable {","    let drinkable: any Drinkable","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Overcoming this limitation requires extensive boilerplate code. This package offers a set of macros"},{"type":"text","text":" "},{"type":"text","text":"that can be attached to your protocol to synthesize ready-to-use property wrappers over the existential"},{"type":"text","text":" "},{"text":"type of the annotated protocol. These wrappers act as proxies for the respective conformances.","type":"text"}]},{"type":"codeListing","code":["import SwiftConformableExistential","","@HashableExistential","protocol Drinkable: Hashable {}","","\/\/ `HashableDrinkable` is a `Hashable` wrapper over `any Drinkable`,","\/\/ synthesized of the attached `@HashableExistential` macro,","\/\/ allowing the compiler to now synthesize the `Hashable` implementation for `Foo`.","struct Foo: Hashable {","","    @HashableDrinkable","    var drinkable: any Drinkable","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Alternatively, the wrappers can also be used on-the-fly, particularly in situations where"},{"text":" ","type":"text"},{"type":"text","text":"employing property wrappers is not suitable:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct Tap: View {","","    @State private var drinkable: any Drinkable = .smallBeer","    ","    var body: some View {","        ...           ","        .onChange(of: HashableDrinkable(drinkable)) { _, newValue in","            prepareForPouring(newValue.wrappedValue)","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"SwiftConformableExistential"},{"text":" is distributed as a SwiftPM package at","type":"text"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git","isActive":true,"type":"reference"},{"text":".","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[[]]},"metadata":{"roleHeading":"Framework","externalID":"SwiftConformableExistential","role":"collection","title":"SwiftConformableExistential","symbolKind":"module","modules":[{"name":"SwiftConformableExistential"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"A set of Swift Macros designed to facilitate the conformance of existential types to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Equatable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":", ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableEncodableExistential(accessModifier:)":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableEncodableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Equatable & Encodable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"text":" ","type":"text"},{"text":"over existentials of the annotated protocol.","type":"text"}],"url":"\/documentation\/swiftconformableexistential\/equatableencodableexistential(accessmodifier:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EquatableEncodableExistential"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TypeAccessModifier","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"kind":"text","text":"?)"}],"title":"EquatableEncodableExistential(accessModifier:)"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/ProtocolMetatypeRepresentable":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ProtocolMetatypeRepresentable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that can be converted to and from an associated value where the value"},{"text":" ","type":"text"},{"text":"is meant to be a protocol metatype.","type":"text"}],"url":"\/documentation\/swiftconformableexistential\/protocolmetatyperepresentable","navigatorTitle":[{"text":"ProtocolMetatypeRepresentable","kind":"identifier"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/ProtocolMetatypeRepresentable","title":"ProtocolMetatypeRepresentable","kind":"symbol","role":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/MetaCoding":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MetaCoding","kind":"identifier"}],"abstract":[],"url":"\/documentation\/swiftconformableexistential\/metacoding","navigatorTitle":[{"text":"MetaCoding","kind":"identifier"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaCoding","title":"MetaCoding","kind":"symbol","role":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/DecodableExistential(accessModifier:)":{"kind":"symbol","abstract":[{"text":"Synthetizes ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"type":"text","text":" "},{"type":"text","text":"over existentials of the annotated protocol."}],"title":"DecodableExistential(accessModifier:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DecodableExistential(accessModifier:)","url":"\/documentation\/swiftconformableexistential\/decodableexistential(accessmodifier:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TypeAccessModifier","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"text":"?)","kind":"text"}]},"https://github.com/stansmida/swift-conformable-existential.git":{"type":"link","title":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git"}],"identifier":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git","url":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/MetaEncoding":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaEncoding","role":"symbol","title":"MetaEncoding","kind":"symbol","navigatorTitle":[{"text":"MetaEncoding","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftconformableexistential\/metaencoding","abstract":[{"type":"text","text":"A type that encodes meta information."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MetaEncoding"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableEncodableExistential(accessModifier:)":{"kind":"symbol","title":"HashableEncodableExistential(accessModifier:)","type":"topic","abstract":[{"text":"Synthetizes ","type":"text"},{"code":"Hashable & Encodable","type":"codeVoice"},{"text":" property wrapper variants (regular, mutable, optional, collection and their combinations)","type":"text"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableEncodableExistential(accessModifier:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"HashableEncodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"accessModifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","kind":"typeIdentifier","text":"TypeAccessModifier"},{"text":"?)","kind":"text"}],"url":"\/documentation\/swiftconformableexistential\/hashableencodableexistential(accessmodifier:)"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/DetailedDesign":{"role":"article","kind":"article","url":"\/documentation\/swiftconformableexistential\/detaileddesign","type":"topic","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DetailedDesign","abstract":[],"title":"Detailed design"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EncodableExistential(accessModifier:)":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EncodableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Encodable","type":"codeVoice"},{"text":" property wrapper variants (regular, mutable, optional, collection and their combinations)","type":"text"},{"type":"text","text":" "},{"type":"text","text":"over existentials of the annotated protocol."}],"url":"\/documentation\/swiftconformableexistential\/encodableexistential(accessmodifier:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"EncodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TypeAccessModifier","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"kind":"text","text":"?)"}],"title":"EncodableExistential(accessModifier:)"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableExistential(accessModifier:)":{"url":"\/documentation\/swiftconformableexistential\/equatableexistential(accessmodifier:)","type":"topic","title":"EquatableExistential(accessModifier:)","role":"symbol","abstract":[{"text":"Synthetizes ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"type":"text","text":" "},{"type":"text","text":"over existentials of the annotated protocol."}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"EquatableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"accessModifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableExistential(accessModifier:)","kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/Essentials":{"title":"Essentials","url":"\/documentation\/swiftconformableexistential\/essentials","abstract":[],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Essentials","role":"article","kind":"article","type":"topic"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableCodableExistential(accessModifier:)":{"url":"\/documentation\/swiftconformableexistential\/hashablecodableexistential(accessmodifier:)","title":"HashableCodableExistential(accessModifier:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HashableCodableExistential"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TypeAccessModifier","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"kind":"text","text":"?)"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableCodableExistential(accessModifier:)","kind":"symbol","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Hashable & Codable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"text":" ","type":"text"},{"text":"over existentials of the annotated protocol.","type":"text"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/OptionalExistentialEncodingConfig":{"url":"\/documentation\/swiftconformableexistential\/optionalexistentialencodingconfig","type":"topic","title":"OptionalExistentialEncodingConfig","role":"symbol","navigatorTitle":[{"text":"OptionalExistentialEncodingConfig","kind":"identifier"}],"abstract":[{"type":"text","text":"A way to tell encodable optional existential wrapper to encode nil."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalExistentialEncodingConfig","kind":"identifier"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/OptionalExistentialEncodingConfig","kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/CodableExistential(accessModifier:)":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/CodableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"text":" ","type":"text"},{"text":"over existentials of the annotated protocol.","type":"text"}],"url":"\/documentation\/swiftconformableexistential\/codableexistential(accessmodifier:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableExistential"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TypeAccessModifier","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"kind":"text","text":"?)"}],"title":"CodableExistential(accessModifier:)"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/MetaDecoding":{"title":"MetaDecoding","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MetaDecoding","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A type that decodes meta information."}],"navigatorTitle":[{"text":"MetaDecoding","kind":"identifier"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaDecoding","type":"topic","kind":"symbol","url":"\/documentation\/swiftconformableexistential\/metadecoding"},"https://github.com/apple/swift-evolution/blob/main/proposals/0335-existential-any.md#extending-existential-types":{"url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0335-existential-any.md#extending-existential-types","type":"link","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0335-existential-any.md#extending-existential-types","titleInlineContent":[{"text":"extending existential types","type":"text"}],"title":"extending existential types"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableDecodableExistential(accessModifier:)":{"url":"\/documentation\/swiftconformableexistential\/equatabledecodableexistential(accessmodifier:)","title":"EquatableDecodableExistential(accessModifier:)","type":"topic","role":"symbol","abstract":[{"text":"Synthetizes ","type":"text"},{"code":"Equatable & Decodable","type":"codeVoice"},{"text":" property wrapper variants (regular, mutable, optional, collection and their combinations)","type":"text"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"EquatableDecodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"accessModifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","kind":"typeIdentifier","text":"TypeAccessModifier"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableDecodableExistential(accessModifier:)","kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/Swift":{"kind":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Swift","url":"\/documentation\/swiftconformableexistential\/swift","abstract":[],"role":"collection","type":"topic","title":"Swift"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableDecodableExistential(accessModifier:)":{"url":"\/documentation\/swiftconformableexistential\/hashabledecodableexistential(accessmodifier:)","title":"HashableDecodableExistential(accessModifier:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"HashableDecodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TypeAccessModifier","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"text":"?)","kind":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableDecodableExistential(accessModifier:)","kind":"symbol","abstract":[{"text":"Synthetizes ","type":"text"},{"code":"Hashable & Decodable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"text":" ","type":"text"},{"type":"text","text":"over existentials of the annotated protocol."}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential","type":"topic","role":"collection","abstract":[{"text":"A set of Swift Macros designed to facilitate the conformance of existential types to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", "},{"code":"Hashable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", and "},{"code":"Codable","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","title":"SwiftConformableExistential","url":"\/documentation\/swiftconformableexistential"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableExistential(accessModifier:)":{"url":"\/documentation\/swiftconformableexistential\/hashableexistential(accessmodifier:)","type":"topic","title":"HashableExistential(accessModifier:)","role":"symbol","abstract":[{"text":"Synthetizes ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"type":"text","text":" "},{"type":"text","text":"over existentials of the annotated protocol."}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"HashableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"accessModifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableExistential(accessModifier:)","kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableCodableExistential(accessModifier:)":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableCodableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Equatable & Codable","type":"codeVoice"},{"text":" property wrapper variants (regular, mutable, optional, collection and their combinations)","type":"text"},{"type":"text","text":" "},{"type":"text","text":"over existentials of the annotated protocol."}],"url":"\/documentation\/swiftconformableexistential\/equatablecodableexistential(accessmodifier:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"EquatableCodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TypeAccessModifier","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"kind":"text","text":"?)"}],"title":"EquatableCodableExistential(accessModifier:)"}}}