{"metadata":{"modules":[{"name":"SwiftConformableExistential"}],"title":"SwiftConformableExistential","role":"collection","roleHeading":"Framework","externalID":"SwiftConformableExistential","symbolKind":"module"},"kind":"symbol","abstract":[{"text":"A set of Swift Macros designed to facilitate the conformance of existential types to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Hashable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"code":"Encodable","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential","interfaceLanguage":"swift"},"topicSections":[{"title":"Articles","identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Essentials","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DetailedDesign"]},{"title":"Existential conformance macros","identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DecodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EncodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/CodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableDecodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableEncodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableCodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableDecodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableEncodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableCodableExistential(accessModifier:)"]},{"identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/ProtocolMetatypeRepresentable","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/OptionalExistentialEncodingConfig","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaDecoding","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaEncoding","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaCoding"],"title":"Coding support"},{"identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Swift"],"title":"Extended Modules"}],"sections":[],"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Until Swift gains support for "},{"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0335-existential-any.md#extending-existential-types","isActive":true},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"they cannot satisfy generic constraints on their own."}]},{"code":["protocol Drinkable: Hashable {}","","\/\/ Is ill-formed, because `any Drinkable` does not conform to `Hashable`,","\/\/ despite the fact that every `Drinkable` instance does.","struct Foo: Hashable {","    let drinkable: any Drinkable","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Overcoming this limitation requires extensive boilerplate code. This package offers a set of macros","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that can be attached to your protocol to synthesize ready-to-use property wrappers over the existential"},{"type":"text","text":" "},{"text":"type of the annotated protocol. These wrappers act as proxies for the respective conformances.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import SwiftConformableExistentials","","@HashableExistential","protocol Drinkable: Hashable {}","","\/\/ `HashableDrinkable` is a `Hashable` wrapper over `any Drinkable`,","\/\/ synthesized of the attached `@HashableExistential` macro,","\/\/ allowing the compiler to now synthesize the `Hashable` implementation for `Foo`.","struct Foo: Hashable {","","    @HashableDrinkable","    var drinkable: any Drinkable","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, the wrappers can also be used on-the-fly, particularly in situations where"},{"type":"text","text":" "},{"text":"employing property wrappers is not suitable:","type":"text"}]},{"syntax":"swift","code":["struct Tap: View {","","    @State private var drinkable: any Drinkable = .smallBeer","    ","    var body: some View {","        ...           ","        .onChange(of: HashableDrinkable(drinkable)) { _, newValue in","            prepareForPouring(newValue.wrappedValue)","        }","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"code":"SwiftConformableExistential","type":"codeVoice"},{"type":"text","text":" is distributed as a SwiftPM package at"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git","isActive":true},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/swiftconformableexistential"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"references":{"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/OptionalExistentialEncodingConfig":{"url":"\/documentation\/swiftconformableexistential\/optionalexistentialencodingconfig","abstract":[{"text":"A way to tell encodable optional existential wrapper to encode nil.","type":"text"}],"navigatorTitle":[{"text":"OptionalExistentialEncodingConfig","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/OptionalExistentialEncodingConfig","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalExistentialEncodingConfig"}],"title":"OptionalExistentialEncodingConfig","role":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/swiftconformableexistential","title":"SwiftConformableExistential","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential","abstract":[{"type":"text","text":"A set of Swift Macros designed to facilitate the conformance of existential types to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Decodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", and "},{"code":"Codable","type":"codeVoice"},{"text":".","type":"text"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableCodableExistential(accessModifier:)":{"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"EquatableCodableExistential","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accessModifier"},{"text":": ","kind":"text"},{"text":"TypeAccessModifier","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"text":"?)","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftconformableexistential\/equatablecodableexistential(accessmodifier:)","type":"topic","title":"EquatableCodableExistential(accessModifier:)","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableCodableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Equatable & Codable","type":"codeVoice"},{"text":" property wrapper variants (regular, mutable, optional, collection and their combinations)","type":"text"},{"text":" ","type":"text"},{"text":"over existentials of the annotated protocol.","type":"text"}]},"https://github.com/stansmida/swift-conformable-existential.git":{"title":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git","identifier":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git","type":"link","url":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/MetaDecoding":{"type":"topic","navigatorTitle":[{"text":"MetaDecoding","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that decodes meta information."}],"kind":"symbol","title":"MetaDecoding","url":"\/documentation\/swiftconformableexistential\/metadecoding","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaDecoding","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MetaDecoding","kind":"identifier"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableExistential(accessModifier:)":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableExistential(accessModifier:)","type":"topic","title":"HashableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftconformableexistential\/hashableexistential(accessmodifier:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashableExistential"},{"kind":"text","text":"("},{"text":"accessModifier","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TypeAccessModifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"kind":"text","text":"?)"}],"kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableEncodableExistential(accessModifier:)":{"title":"HashableEncodableExistential(accessModifier:)","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableEncodableExistential(accessModifier:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"HashableEncodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"accessModifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TypeAccessModifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"kind":"text","text":"?)"}],"type":"topic","url":"\/documentation\/swiftconformableexistential\/hashableencodableexistential(accessmodifier:)","abstract":[{"text":"Synthetizes ","type":"text"},{"type":"codeVoice","code":"Hashable & Encodable"},{"text":" property wrapper variants (regular, mutable, optional, collection and their combinations)","type":"text"},{"type":"text","text":" "},{"type":"text","text":"over existentials of the annotated protocol."}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EncodableExistential(accessModifier:)":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EncodableExistential(accessModifier:)","type":"topic","title":"EncodableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftconformableexistential\/encodableexistential(accessmodifier:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodableExistential"},{"kind":"text","text":"("},{"text":"accessModifier","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TypeAccessModifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"kind":"text","text":"?)"}],"kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableDecodableExistential(accessModifier:)":{"url":"\/documentation\/swiftconformableexistential\/hashabledecodableexistential(accessmodifier:)","type":"topic","title":"HashableDecodableExistential(accessModifier:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HashableDecodableExistential"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","kind":"typeIdentifier","text":"TypeAccessModifier"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableDecodableExistential(accessModifier:)","abstract":[{"text":"Synthetizes ","type":"text"},{"type":"codeVoice","code":"Hashable & Decodable"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"text":" ","type":"text"},{"type":"text","text":"over existentials of the annotated protocol."}],"role":"symbol","kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableCodableExistential(accessModifier:)":{"title":"HashableCodableExistential(accessModifier:)","type":"topic","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableCodableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Hashable & Codable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"type":"text","text":" "},{"type":"text","text":"over existentials of the annotated protocol."}],"role":"symbol","url":"\/documentation\/swiftconformableexistential\/hashablecodableexistential(accessmodifier:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashableCodableExistential"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accessModifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier"},{"text":"?)","kind":"text"}],"kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/CodableExistential(accessModifier:)":{"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodableExistential"},{"kind":"text","text":"("},{"text":"accessModifier","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier"},{"kind":"text","text":"?)"}],"url":"\/documentation\/swiftconformableexistential\/codableexistential(accessmodifier:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/CodableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"type":"codeVoice","code":"Codable"},{"text":" property wrapper variants (regular, mutable, optional, collection and their combinations)","type":"text"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}],"title":"CodableExistential(accessModifier:)"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/MetaEncoding":{"kind":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaEncoding","abstract":[{"type":"text","text":"A type that encodes meta information."}],"title":"MetaEncoding","navigatorTitle":[{"text":"MetaEncoding","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftconformableexistential\/metaencoding","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MetaEncoding","kind":"identifier"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/Swift":{"url":"\/documentation\/swiftconformableexistential\/swift","kind":"symbol","title":"Swift","type":"topic","role":"collection","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Swift","abstract":[]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/DetailedDesign":{"title":"Detailed design","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DetailedDesign","kind":"article","role":"article","type":"topic","url":"\/documentation\/swiftconformableexistential\/detaileddesign","abstract":[]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/DecodableExistential(accessModifier:)":{"url":"\/documentation\/swiftconformableexistential\/decodableexistential(accessmodifier:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodableExistential"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accessModifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier"},{"text":"?)","kind":"text"}],"type":"topic","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DecodableExistential(accessModifier:)","title":"DecodableExistential(accessModifier:)","kind":"symbol","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"text":" ","type":"text"},{"text":"over existentials of the annotated protocol.","type":"text"}],"role":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/Essentials":{"type":"topic","kind":"article","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Essentials","url":"\/documentation\/swiftconformableexistential\/essentials","role":"article","title":"Essentials","abstract":[]},"https://github.com/apple/swift-evolution/blob/main/proposals/0335-existential-any.md#extending-existential-types":{"title":"extending existential types","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0335-existential-any.md#extending-existential-types","type":"link","url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0335-existential-any.md#extending-existential-types","titleInlineContent":[{"text":"extending existential types","type":"text"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableEncodableExistential(accessModifier:)":{"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EquatableEncodableExistential"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accessModifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier"},{"kind":"text","text":"?)"}],"url":"\/documentation\/swiftconformableexistential\/equatableencodableexistential(accessmodifier:)","type":"topic","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableEncodableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"type":"codeVoice","code":"Equatable & Encodable"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"text":" ","type":"text"},{"type":"text","text":"over existentials of the annotated protocol."}],"title":"EquatableEncodableExistential(accessModifier:)","role":"symbol","kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableDecodableExistential(accessModifier:)":{"title":"EquatableDecodableExistential(accessModifier:)","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableDecodableExistential(accessModifier:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"EquatableDecodableExistential"},{"kind":"text","text":"("},{"text":"accessModifier","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier"},{"kind":"text","text":"?)"}],"type":"topic","url":"\/documentation\/swiftconformableexistential\/equatabledecodableexistential(accessmodifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"type":"codeVoice","code":"Equatable & Decodable"},{"text":" property wrapper variants (regular, mutable, optional, collection and their combinations)","type":"text"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/ProtocolMetatypeRepresentable":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ProtocolMetatypeRepresentable","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftconformableexistential\/protocolmetatyperepresentable","title":"ProtocolMetatypeRepresentable","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/ProtocolMetatypeRepresentable","navigatorTitle":[{"kind":"identifier","text":"ProtocolMetatypeRepresentable"}],"abstract":[{"text":"A type that can be converted to and from an associated value where the value","type":"text"},{"text":" ","type":"text"},{"text":"is meant to be a protocol metatype.","type":"text"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableExistential(accessModifier:)":{"url":"\/documentation\/swiftconformableexistential\/equatableexistential(accessmodifier:)","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"EquatableExistential"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accessModifier"},{"kind":"text","text":": "},{"text":"TypeAccessModifier","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"text":"?)","kind":"text"}],"title":"EquatableExistential(accessModifier:)","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"type":"codeVoice","code":"Equatable"},{"text":" property wrapper variants (regular, mutable, optional, collection and their combinations)","type":"text"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/MetaCoding":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MetaCoding","kind":"identifier"}],"title":"MetaCoding","navigatorTitle":[{"kind":"identifier","text":"MetaCoding"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaCoding","url":"\/documentation\/swiftconformableexistential\/metacoding","role":"symbol","type":"topic"}}}